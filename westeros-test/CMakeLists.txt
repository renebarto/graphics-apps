project(westeros-test)

set(CMAKE_CXX_STANDARD 11)

include(display_list)
include(show_target_properties)

find_package(EGL REQUIRED)
find_package(OpenGLES2 REQUIRED)
find_package(Wayland REQUIRED)
find_package(WaylandEGL REQUIRED)
find_package(LibXkbCommon REQUIRED)
find_package(LibFfi REQUIRED)
if (SYNAPTICS_PLATFORM)
    find_package(MarvellSDK REQUIRED)
endif()
find_package(WesterosSimpleShell REQUIRED)

set(WESTEROS_TEST_PACKAGE_NAME ${PROJECT_NAME})
set(WESTEROS_TEST_TARGET_NAME ${WESTEROS_TEST_PACKAGE_NAME})
set(WESTEROS_TEST_PACKAGE_DESCRIPTION "Simple EGL application")
set(WESTEROS_TEST_PACKAGE_VERSION_MAJOR 1)
set(WESTEROS_TEST_PACKAGE_VERSION_MINOR 0)
set(WESTEROS_TEST_PACKAGE_VERSION_MICRO 0)
set(WESTEROS_TEST_PACKAGE_VERSION ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_MICRO})

set(WESTEROS_TEST_DEFINITIONS
    USE_XDG_VERSION5)

if (SYNAPTICS_PLATFORM)
    list(APPEND WESTEROS_TEST_DEFINITIONS EGL_API_FB)
endif()

set(WESTEROS_TEST_INCLUDE_DIRS
    ${OPENGLES2_INCLUDE_DIRECTORY}
    ${EGL_INCLUDE_DIRECTORY}
    ${WAYLAND_CLIENT_INCLUDE_DIRECTORY}
    ${WAYLAND_EGL_INCLUDE_DIRECTORY}
    ${LIB_XKB_COMMON_INCLUDE_DIRECTORY}
    ${LIB_FFI_INCLUDE_DIRECTORY}
    )

set(WESTEROS_TEST_OPTIONS
    )

set(WESTEROS_TEST_LINK_OPTIONS)

set(WESTEROS_TEST_DEPENDENCIES
    )

set(WESTEROS_TEST_LIBS
    ${CMAKE_THREAD_LIBS_INIT}
    ${WESTEROS_SIMPLESHELL_LIBRARIES}
    ${MARVELL_AMP_CLIENT_LIBRARIES}
    ${GFX_LIBRARIES}
    ${EGL_LIBRARIES}
    ${OPENGLES2_LIBRARIES}
    ${WAYLAND_CLIENT_LIBRARIES}
    ${WAYLAND_EGL_LIBRARIES}
    ${LIB_XKB_COMMON_LIBRARIES}
    ${LIB_FFI_LIBRARIES}
    ${WESTEROS_TEST_DEPENDENCIES})

file(GLOB WESTEROS_TEST_INCLUDES *.h)

set(WESTEROS_TEST_SOURCES
    main.cpp
    )

set(WESTEROS_TEST_INPUT
    ${WESTEROS_TEST_SOURCES}
    ${WESTEROS_TEST_INCLUDES}
    )

if (BUILD_REFERENCE)
    list(APPEND WESTEROS_TEST_DEFINITIONS BUILD_REFERENCE=${BUILD_REFERENCE})
endif()

if (VERBOSE_BUILD)
    display_list("Defines                     : " ${WESTEROS_TEST_DEFINITIONS} )
    display_list("Compiler options            : " ${WESTEROS_TEST_OPTIONS} )
    display_list("Source files                : " ${WESTEROS_TEST_SOURCES} )
    display_list("Include files               : " ${WESTEROS_TEST_INCLUDES} )
    display_list("Include dirs                : " ${WESTEROS_TEST_INCLUDE_DIRS} )
    display_list("Link libs                   : " ${WESTEROS_TEST_LIBS} )
    display_list("Linker options              : " ${WESTEROS_TEST_LINK_OPTIONS} )
    display_list("Dependencies                : " ${WESTEROS_TEST_DEPENDENCIES} )
endif()

add_executable(${WESTEROS_TEST_TARGET_NAME} ${WESTEROS_TEST_INPUT})
target_compile_definitions(${WESTEROS_TEST_TARGET_NAME} PRIVATE ${WESTEROS_TEST_DEFINITIONS})
target_compile_options(${WESTEROS_TEST_TARGET_NAME} PRIVATE ${WESTEROS_TEST_OPTIONS})
target_include_directories(${WESTEROS_TEST_TARGET_NAME} PUBLIC ${WESTEROS_TEST_INCLUDE_DIRS})
target_link_libraries(${WESTEROS_TEST_TARGET_NAME} ${WESTEROS_TEST_LIBS})
list_to_string(WESTEROS_TEST_LINK_OPTIONS WESTEROS_TEST_LINK_OPTIONS_STRING)
if (NOT "${WESTEROS_TEST_LINK_OPTIONS_STRING}" STREQUAL "")
    set_target_properties(${WESTEROS_TEST_TARGET_NAME} PROPERTIES LINK_FLAGS "${WESTEROS_TEST_LINK_OPTIONS_STRING}")
endif()

if (VERBOSE_BUILD)
    show_target_properties(${WESTEROS_TEST_TARGET_NAME})
endif()
